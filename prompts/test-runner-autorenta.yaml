meta:
  name: "Test Runner â€“ AutoRenta (read-only)"
  version: "2025-10-20"
  mode: "non-interactive"
  mutation: "disabled"
  outputs_dir: "generated-docs"

targets:
  web:
    app: "https://autorenta.pages.dev"
    local: "http://localhost:3000"
  db:
    schema: "public"
    supabase_url: "${SUPABASE_URL}"

gates:
  fail_on:
    - "http_status>=500"
    - "missing_hsts"
    - "rls_disabled"
    - "pnpm_audit_critical>0"
    - "wallet_balance_mismatch"

steps:
  - id: env_check
    run:
      - "node -v"
      - "pnpm -v"
      - "pnpm install --frozen-lockfile"

  - id: build_quality
    run:
      - "pnpm lint"
      - "pnpm typecheck"
      - "pnpm build"
    artifacts:
      - "build-logs.txt"

  - id: smoke_web
    http:
      - url: "${targets.web.app}/"
      - url: "${targets.web.app}/api/health"
    save_headers:
      - "headers-app.txt"
      - "headers-health.txt"
    checks:
      - "status in [200, 301, 302]"

  - id: security_headers
    analyze_headers:
      require:
        - "strict-transport-security"
        - "x-frame-options"
        - "content-security-policy"
        - "referrer-policy"

  - id: dns_tls
    run:
      - "curl -Iv ${targets.web.app}/ -m 15 | head -n 30"
      - "curl -s -D- -o /dev/null ${targets.web.app}/api/health"

  - id: db_basics
    run:
      - "psql $DATABASE_URL -c \"SELECT tablename, rowsecurity FROM pg_tables WHERE schemaname='${targets.db.schema}' AND tablename IN ('users', 'user_wallets', 'bookings', 'withdrawal_requests');\" > ${outputs_dir}/rls-table-status.txt"
      - "psql $DATABASE_URL -c \"SELECT COUNT(*) FROM pg_policies WHERE schemaname='${targets.db.schema}';\" > ${outputs_dir}/policies-count.txt"
    checks:
      - "file_contains: rls-table-status.txt: true"

  - id: wallet_integrity
    run:
      - "psql $DATABASE_URL -c \"SELECT COUNT(*) as wallet_count FROM user_wallets;\" > ${outputs_dir}/wallet-integrity.txt"
      - "psql $DATABASE_URL -c \"SELECT status, COUNT(*) FROM withdrawal_requests GROUP BY status;\" > ${outputs_dir}/withdrawal-status.txt"

  - id: deps_vulns
    run:
      - "pnpm audit --prod --json > ${outputs_dir}/pnpm-audit.json || true"
    evaluate:
      - "assert_json: pnpm-audit.json: advisories_critical==0"

  - id: perf_quick
    run:
      - "node -e \"const https=require('https');const u='${targets.web.app}/';const s=Date.now();https.get(u,(r)=>{r.resume();r.on('end',()=>console.log('TTFB(ms):',Date.now()-s));});\" | tee ${outputs_dir}/perf-app.txt"

report:
  main: "TEST_RUN_REPORT.md"
  include:
    - "headers-app.txt"
    - "headers-health.txt"
    - "rls-table-status.txt"
    - "policies-count.txt"
    - "wallet-integrity.txt"
    - "withdrawal-status.txt"
    - "pnpm-audit.json"
    - "perf-app.txt"

exit_policy:
  success_if:
    - "all_steps_passed"
  fail_if:
    - "any_gate_failed"
