#!/usr/bin/env node

/**
 * Generates public/env.js with runtime environment variables
 * This allows Angular to read config in the browser via window.__env
 */

const fs = require('fs');
const path = require('path');

// Load environment variables from .env files
require('dotenv').config({ path: path.join(__dirname, '../.env.development.local') });
require('dotenv').config({ path: path.join(__dirname, '../.env') });

const envVars = {
  NG_APP_SUPABASE_URL: process.env.NG_APP_SUPABASE_URL || 'https://obxvffplochgeiclibng.supabase.co',
  NG_APP_SUPABASE_ANON_KEY: process.env.NG_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9ieHZmZnBsb2NoZ2VpY2xpYm5nIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjA1NTMyMzIsImV4cCI6MjA3NjEyOTIzMn0.1b4XQpOgNm6bXdcU8gXGG2aUbTkjvr8xyJU4Mkgt6GU',
  NG_APP_DEFAULT_CURRENCY: process.env.NG_APP_DEFAULT_CURRENCY || 'ARS',
  NG_APP_PAYMENTS_WEBHOOK_URL: process.env.NG_APP_PAYMENTS_WEBHOOK_URL || '',
  NG_APP_MAPBOX_ACCESS_TOKEN:
    process.env.NG_APP_MAPBOX_ACCESS_TOKEN ||
    'pk.eyJ1IjoiZWN1Y29uZG9yIiwiYSI6ImNtZ3R0bjQ2dDA4Znkyd3B5ejkzNDFrb3IifQ.WwgMG-oIfT_9BDvwAT3nUg',
  NG_APP_CAR_LOCATIONS_EDGE_FUNCTION: process.env.NG_APP_CAR_LOCATIONS_EDGE_FUNCTION || '',
  NG_APP_BACKGROUND_MODEL_URL:
    process.env.NG_APP_BACKGROUND_MODEL_URL ||
    'https://huggingface.co/briaai/RMBG-1.4/resolve/main/rmbg-1.4.onnx?download=1',
  NG_APP_MERCADOPAGO_PUBLIC_KEY:
    process.env.NG_APP_MERCADOPAGO_PUBLIC_KEY ||
    process.env.MERCADOPAGO_PUBLIC_KEY ||
    ''
};

const envJsContent = `// Auto-generated environment configuration
// This file is generated by scripts/generate-env.js during build
// DO NOT EDIT MANUALLY
window.__env = ${JSON.stringify(envVars, null, 2)};
`;

const outputPath = path.join(__dirname, '../public/env.js');
fs.writeFileSync(outputPath, envJsContent);

console.log('âœ… Generated public/env.js with environment configuration');
console.log('Environment variables:');
Object.entries(envVars).forEach(([key, value]) => {
  const maskedValue = key.includes('KEY') || key.includes('TOKEN')
    ? value ? `${value.substring(0, 10)}...` : '(empty)'
    : value || '(empty)';
  console.log(`  - ${key}: ${maskedValue}`);
});
